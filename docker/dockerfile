ARG cuda_version=9.0
# ARG cudnn_version=7
ARG ubuntu_version=16.04
ARG nvidia_cudnn_version=7.1.3.16-1+cuda9.0

FROM nvidia/cudagl:${cuda_version}-devel-ubuntu${ubuntu_version}
#FROM osrf/ros:kinetic-desktop-full
#FROM yubaoliu/root:ros-cuda10.2-cudnn7-ubuntu16

################################################################################

# Install the Nvidia cuDNN library missing in the parent image.
# https://gitlab.com/nvidia/cuda/blob/ubuntu16.04/10.1/devel/cudnn7/Dockerfile
ARG nvidia_cudnn_version
ENV NVIDIA_CUDNN_VERSION=${nvidia_cudnn_version}
RUN apt-get update && apt-get install -y --no-install-recommends \
    libcudnn7=${NVIDIA_CUDNN_VERSION} \
    libcudnn7-dev=${NVIDIA_CUDNN_VERSION} \
    && apt-mark hold libcudnn7 \
    && rm -rf /var/lib/apt/lists/*

################################################################################
#
# Add ROS repository
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu xenial main" > /etc/apt/sources.list.d/ros-latest.list'  \
    && apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654  \
    && apt-get update  \
    && apt-get install -f \
    && apt-get install -y ros-kinetic-desktop-full \
    && rm -rf /var/lib/apt/lists/*

# Install ROS bootstrap tools
RUN apt-get update && apt-get install --no-install-recommends -y \
    python-rosdep \
    python-rosinstall \
    python-vcstools \
    python-rosinstall-generator \
    python-wstool \
    && rm -rf /var/lib/apt/lists/*

RUN bash -c "source /opt/ros/kinetic/setup.bash" \
    && echo "Removing packages known to conflict"  \
    #&& apt-get purge  -y -q ros-kinetic-libg2o libqglviewer-dev \
    && rosdep init \
    && rosdep update

RUN echo "Install dependences for g2o" \
    && apt-get update \
    && apt-get install  -y libsuitesparse-dev libeigen3-dev \
    && rm -rf /var/lib/apt/lists/*

RUN  git clone -b c++03 https://github.com/felixendres/g2o.git /root/g2ofork \
    && cd /root/g2ofork \
    && mkdir build \
    && cd build \
    && cmake .. -DCMAKE_INSTALL_PREFIX=../install -DG2O_BUILD_EXAMPLES=OFF \
    && nice make -j2 install

ENV G2O_DIR /root/g2ofork/install

#COPY ./install.sh /root/
#RUN bash -c "/root/install.sh"

### Create catkin workspace ###
RUN mkdir -p /root/catkin_ws/src
WORKDIR /root/catkin_ws
RUN bash -c "source /opt/ros/kinetic/setup.bash  \
             && cd /root/catkin_ws \
             && catkin_make -DCMAKE_BUILD_TYPE=Release"

# Load ROS environment at docker exec bash
RUN bash -c 'echo "source /opt/ros/kinetic/setup.bash" >> /root/.bashrc' \
    && bash -c 'echo "source /root/catkin_ws/devel/setup.bash" >> /root/.bashrc'
 
COPY ./entrypoint.sh /
RUN chmod 777 /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]

CMD ["bash"]

WORKDIR /root/catkin_ws/src

# # Install dependencies
# # Newer CUDA was installed in base image, so rosdep keys of CUDA are skipped
# RUN /bin/bash -c "source /opt/ros/kinetic/setup.bash && \
#                   rosdep install --from-paths src -r -y --skip-keys=\"nvidia-cuda-dev nvidia-cuda\""
#                   
# # Build
# RUN /bin/bash -c "source /opt/ros/kinetic/setup.bash && \
#                   catkin_make -DCMAKE_BUILD_TYPE=Release"
# 
# # Load ROS environment at each run


